{"version":3,"sources":["scripts/main.js"],"names":["BASE_URL","request","url","fetch","then","response","json","getPhones","Promise","resolve","reject","result","generateID","array","arrayPhoneID","item","push","id","createMessage","className","text","list","div","document","createElement","ul","innerHTML","Array","isArray","map","el","value","liName","liID","innerText","name","toUpperCase","append","body","getFirstReceivedDetails","race","getAllSuccessfulDetails","allSettled","getThreeFastestDetails","finalArray","all","console","log","message"],"mappings":"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","file":"main.f1516663.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst BASE_URL = `https://mate-academy.github.io/phone-catalogue-static/api`;\n\nconst request = (url) => {\n  return fetch(`${BASE_URL}${url}`)\n    .then(response => response.json());\n};\n\nfunction getPhones(url) {\n  return new Promise((resolve, reject) => {\n    request(url)\n      .then(result => resolve(result));\n  });\n};\n\nfunction generateID(array) {\n  const arrayPhoneID = [];\n\n  for (const item of array) {\n    arrayPhoneID.push(request(`/phones/${item.id}.json`));\n  }\n\n  return arrayPhoneID;\n}\n\nfunction createMessage(className, text, list) {\n  const div = document.createElement('div');\n  const ul = document.createElement('ul');\n\n  div.className = `${className}`;\n  div.innerHTML = `<h3>${text}</h3>`;\n\n  if (!Array.isArray(list)) {\n    ul.innerHTML = `<li>${list.name}</li><li>${(list.id).toUpperCase()}</li>`;\n    div.append(ul);\n    document.body.append(div);\n  } else {\n    for (const item of list.map(el => el.value)) {\n      const liName = document.createElement('li');\n      const liID = document.createElement('li');\n\n      liName.innerText = `Name: ${(item.name).toUpperCase()}`;\n      liID.innerText = `ID: ${(item.id).toUpperCase()}`;\n\n      ul.append(liName, liID);\n    }\n    document.body.append(div);\n    div.append(ul);\n  }\n}\n\nfunction getFirstReceivedDetails() {\n  return Promise.resolve(\n    getPhones('/phones.json')\n      .then(result => generateID(result))\n      .then(array => Promise.race(array))\n  );\n}\n\nfunction getAllSuccessfulDetails() {\n  return Promise.resolve(\n    getPhones('/phones.json')\n      .then(array => Promise.allSettled(array))\n  );\n}\n\nfunction getThreeFastestDetails() {\n  const finalArray = [];\n\n  finalArray.push(getFirstReceivedDetails());\n  finalArray.push(getFirstReceivedDetails());\n  finalArray.push(getFirstReceivedDetails());\n\n  return Promise.resolve(\n    Promise.all(finalArray)\n  )\n\n    // eslint-disable-next-line no-console\n    .then(result => console.log(result));\n}\n\ngetFirstReceivedDetails().then(message =>\n  createMessage('first-received', 'First Received', message));\n\ngetAllSuccessfulDetails()\n  .then(message => createMessage('all-successful', 'All Successful', message));\n\ngetThreeFastestDetails();\n"]}